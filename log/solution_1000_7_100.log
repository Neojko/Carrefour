Solver command line: ['/usr/local/bin/cbc', '-sec', '60', '-timeMode', 'elapsed', '-ratioGap', '0.01', '-printingOptions', 'all', '-import', '/var/folders/v_/24wplqn96qn6_5qvt5jtq22m0000gn/T/tmpbqfx0r9q.pyomo.lp', '-stat=1', '-solve', '-solu', '/var/folders/v_/24wplqn96qn6_5qvt5jtq22m0000gn/T/tmpbqfx0r9q.pyomo.soln']

Welcome to the CBC MILP Solver 
Version: 2.10.5 
Build Date: Nov 17 2020 

command line - /usr/local/bin/cbc -sec 60 -timeMode elapsed -ratioGap 0.01 -printingOptions all -import /var/folders/v_/24wplqn96qn6_5qvt5jtq22m0000gn/T/tmpbqfx0r9q.pyomo.lp -stat=1 -solve -solu /var/folders/v_/24wplqn96qn6_5qvt5jtq22m0000gn/T/tmpbqfx0r9q.pyomo.soln (default strategy 1)
seconds was changed from 1e+100 to 60
Option for timeMode changed from cpu to elapsed
ratioGap was changed from 0 to 0.01
Option for printingOptions changed from normal to all
Presolve 1049 (-1) rows, 3008 (-1) columns and 6133 (-1) elements
Statistics for presolved model
Original problem has 3008 integers (3000 of which binary)
Presolved problem has 3008 integers (3000 of which binary)
==== 7 zero objective 102 different
==== absolute objective values 102 different
==== for integers 7 zero objective 102 different
==== for integers absolute objective values 102 different
===== end objective counts


Problem has 1049 rows, 3008 columns (3001 with objective) and 6133 elements
Column breakdown:
8 of type 0.0->inf, 0 of type 0.0->up, 0 of type lo->inf, 
0 of type lo->up, 0 of type free, 0 of type fixed, 
0 of type -inf->0.0, 0 of type -inf->up, 3000 of type 0.0->1.0 
Row breakdown:
7 of type E 0.0, 1000 of type E 1.0, 0 of type E -1.0, 
0 of type E other, 0 of type G 0.0, 0 of type G 1.0, 
0 of type G other, 42 of type L 0.0, 0 of type L 1.0, 
0 of type L other, 0 of type Range 0.0->1.0, 0 of type Range other, 
0 of type Free 
Continuous objective value is 26115.3 - 0.05 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 1049 rows, 3008 columns (3008 integer (3000 of which binary)) and 6133 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.42857
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 27117 iterations 49
Cbc0038I Solution found of 27117
Cbc0038I Cleaned solution of 27117
Cbc0038I Before mini branch and bound, 2988 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1049 rows 3008 columns, reduced to 47 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 27117 to 27114 (0.12 seconds)
Cbc0038I Round again with cutoff of 27013.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.71429 (19) obj. 26146.6 iterations 24
Cbc0038I Pass   3: suminf.    2.71429 (19) obj. 26384.9 iterations 30
Cbc0038I Pass   4: suminf.    2.71429 (19) obj. 26384.9 iterations 23
Cbc0038I Pass   5: suminf.    3.96406 (21) obj. 27013.2 iterations 95
Cbc0038I Pass   6: suminf.    2.71429 (21) obj. 27013.2 iterations 38
Cbc0038I Pass   7: suminf.    3.87620 (21) obj. 27013.2 iterations 48
Cbc0038I Pass   8: suminf.    2.71429 (21) obj. 27013.2 iterations 59
Cbc0038I Pass   9: suminf.    2.82857 (21) obj. 27013.2 iterations 43
Cbc0038I Pass  10: suminf.    3.64693 (21) obj. 27013.2 iterations 77
Cbc0038I Pass  11: suminf.    2.71984 (21) obj. 27013.2 iterations 31
Cbc0038I Pass  12: suminf.    3.28910 (20) obj. 27013.2 iterations 68
Cbc0038I Pass  13: suminf.    2.89524 (20) obj. 27013.2 iterations 47
Cbc0038I Pass  14: suminf.    4.19366 (21) obj. 27013.2 iterations 69
Cbc0038I Pass  15: suminf.    2.71429 (21) obj. 27013.2 iterations 55
Cbc0038I Pass  16: suminf.    3.18514 (21) obj. 27013.2 iterations 40
Cbc0038I Pass  17: suminf.    2.84944 (21) obj. 27013.2 iterations 48
Cbc0038I Pass  18: suminf.    3.31384 (21) obj. 27013.2 iterations 66
Cbc0038I Pass  19: suminf.    2.71429 (21) obj. 27013.2 iterations 47
Cbc0038I Pass  20: suminf.    2.77416 (21) obj. 27013.2 iterations 33
Cbc0038I Pass  21: suminf.    5.00000 (21) obj. 27013.2 iterations 82
Cbc0038I Pass  22: suminf.    2.89091 (21) obj. 27013.2 iterations 37
Cbc0038I Pass  23: suminf.    3.00000 (19) obj. 26948.7 iterations 82
Cbc0038I Pass  24: suminf.    2.71429 (19) obj. 26983 iterations 43
Cbc0038I Pass  25: suminf.    2.71429 (19) obj. 27003.6 iterations 30
Cbc0038I Pass  26: suminf.    2.71429 (19) obj. 27003.6 iterations 30
Cbc0038I Pass  27: suminf.    3.00000 (19) obj. 27005.3 iterations 45
Cbc0038I Pass  28: suminf.    3.60409 (21) obj. 27013.2 iterations 99
Cbc0038I Pass  29: suminf.    2.71429 (21) obj. 27013.2 iterations 53
Cbc0038I Pass  30: suminf.    3.81447 (21) obj. 27013.2 iterations 82
Cbc0038I Pass  31: suminf.    2.92463 (21) obj. 27013.2 iterations 75
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2707 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1049 rows 3008 columns, reduced to 63 rows 174 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of 27114 - took 0.12 seconds
Cbc0012I Integer solution of 27114 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 1049 rows 3008 columns, reduced to 47 rows 12 columns
Cbc0031I 3 added rows had average density of 8.6666667
Cbc0013I At root node, 8 cuts changed objective from 26115.286 to 27113.143 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 12 row cuts average 314.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective 27114, took 60 iterations and 0 nodes (0.28 seconds)
Cbc0035I Maximum depth 0, 1985 variables fixed on reduced cost
Cuts at root node changed objective from 26115.3 to 27113.1
Probing was tried 4 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 4 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 4 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                27114.00000000
Enumerated nodes:               0
Total iterations:               60
Time (CPU seconds):             0.27
Time (Wallclock seconds):       0.28

Total time (CPU seconds):       0.30   (Wallclock seconds):       0.31


